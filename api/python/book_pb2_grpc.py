# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import book_pb2 as book__pb2


class BookStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/bookowl.Book/Register',
                request_serializer=book__pb2.BookRegisterRequest.SerializeToString,
                response_deserializer=book__pb2.BookRegisterResponse.FromString,
                )
        self.GetByUserID = channel.unary_unary(
                '/bookowl.Book/GetByUserID',
                request_serializer=book__pb2.GetByUserIDRequest.SerializeToString,
                response_deserializer=book__pb2.GetBookResponse.FromString,
                )
        self.GetByBookmarkID = channel.unary_unary(
                '/bookowl.Book/GetByBookmarkID',
                request_serializer=book__pb2.GetByBookmarkIDRequest.SerializeToString,
                response_deserializer=book__pb2.GetBookResponse.FromString,
                )
        self.UpdateBookmarkID = channel.unary_unary(
                '/bookowl.Book/UpdateBookmarkID',
                request_serializer=book__pb2.UpdateBookmarkIDRequest.SerializeToString,
                response_deserializer=book__pb2.UpdateBookResponse.FromString,
                )
        self.UpdateReadStatus = channel.unary_unary(
                '/bookowl.Book/UpdateReadStatus',
                request_serializer=book__pb2.UpdateReadStatusRequest.SerializeToString,
                response_deserializer=book__pb2.UpdateBookResponse.FromString,
                )


class BookServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Register(self, request, context):
        """Registering Book using ISBN and a book width[mm].
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByUserID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByBookmarkID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBookmarkID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateReadStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BookServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=book__pb2.BookRegisterRequest.FromString,
                    response_serializer=book__pb2.BookRegisterResponse.SerializeToString,
            ),
            'GetByUserID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByUserID,
                    request_deserializer=book__pb2.GetByUserIDRequest.FromString,
                    response_serializer=book__pb2.GetBookResponse.SerializeToString,
            ),
            'GetByBookmarkID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByBookmarkID,
                    request_deserializer=book__pb2.GetByBookmarkIDRequest.FromString,
                    response_serializer=book__pb2.GetBookResponse.SerializeToString,
            ),
            'UpdateBookmarkID': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBookmarkID,
                    request_deserializer=book__pb2.UpdateBookmarkIDRequest.FromString,
                    response_serializer=book__pb2.UpdateBookResponse.SerializeToString,
            ),
            'UpdateReadStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateReadStatus,
                    request_deserializer=book__pb2.UpdateReadStatusRequest.FromString,
                    response_serializer=book__pb2.UpdateBookResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bookowl.Book', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Book(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bookowl.Book/Register',
            book__pb2.BookRegisterRequest.SerializeToString,
            book__pb2.BookRegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByUserID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bookowl.Book/GetByUserID',
            book__pb2.GetByUserIDRequest.SerializeToString,
            book__pb2.GetBookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByBookmarkID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bookowl.Book/GetByBookmarkID',
            book__pb2.GetByBookmarkIDRequest.SerializeToString,
            book__pb2.GetBookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBookmarkID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bookowl.Book/UpdateBookmarkID',
            book__pb2.UpdateBookmarkIDRequest.SerializeToString,
            book__pb2.UpdateBookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateReadStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bookowl.Book/UpdateReadStatus',
            book__pb2.UpdateReadStatusRequest.SerializeToString,
            book__pb2.UpdateBookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
